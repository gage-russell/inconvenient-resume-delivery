fastapi:
  # Default values for fastapi.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  fullnameOverride: "inconvenient-resume-app"

  replicaCount: 1

  image:
    repository: localhost:5001/inconvenient-resume-app
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  config:
    # Direct configuration values
    extra:
      API_HOST: "http://inconvenient-resume-api:8000"
      POSTGRES_SERVER: "localhost"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"

    # Configuration from existing secrets
    existingConfig: ""
    existingSecret: ""

  migration:
    enabled: false
    command: [ "alembic", "upgrade", "head" ]
    resources: { }
    annotations: { }

  service:
    type: ClusterIP
    port: 8080
    containerPort: 8080

  serviceAccount:
    create: true
    name: "inconvenient-resume-app"

  ingress:
    enabled: true
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: app.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: "100m"
      memory: "128Mi"
    requests:
      cpu: "100m"
      memory: "128Mi"

  livenessProbe:
    httpGet:
      path: /ping
      port: 8080
      scheme: HTTP
  readinessProbe:
    httpGet:
      path: /ping
      port: 8080
      scheme: HTTP

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: [ ]
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: [ ]
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }
